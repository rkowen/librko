#!/bin/sh
#set -xv

usage() {
cat <<!

Globally searches through stdin ... changing lex/yacc
references to use a different prefix instead of the typical "yy".
It's based on a sed script given in the O'Reilly nutshell book on
"lex & yacc" by John R. Levine, Tony Mason, & Doug Brown.

usage $0 [-h][-l|-y|-b] -p prefix <file.in >file.out

where	-h|--help		= this help info
	-l|--lex		= switch lex references
	-y|--yacc		= switch yacc references
	-b|--both		= handle both lex/yacc references (default)
	-p|--prefix prefix	= what prefix to use instead of "yy"
	file.in			= input file
	file.out		= output file

!
}

sedlex () {
# change lex external references
#  need to make sure it's an isolated C name
#	ppre="\([^a-zA-Z_]\)"
#	ppost="\([^a-zA-Z_]\)"
	ppre="\b"
	ppost="\b"
sed \
	-e "s/${ppre}yyback${ppost}/${prefix}back/g" \
	-e "s/${ppre}yybgin${ppost}/${prefix}bgin/g" \
	-e "s/${ppre}yycrank${ppost}/${prefix}crank/g" \
	-e "s/${ppre}yyerror${ppost}/${prefix}error/g" \
	-e "s/${ppre}yyestate${ppost}/${prefix}estate/g" \
	-e "s/${ppre}yyextra${ppost}/${prefix}extra/g" \
	-e "s/${ppre}yyfnd${ppost}/${prefix}fnd/g" \
	-e "s/${ppre}yyin${ppost}/${prefix}in/g" \
	-e "s/${ppre}yyinput${ppost}/${prefix}input/g" \
	-e "s/${ppre}yyleng${ppost}/${prefix}leng/g" \
	-e "s/${ppre}yylex${ppost}/${prefix}lex/g" \
	-e "s/${ppre}yylineno${ppost}/${prefix}lineno/g" \
	-e "s/${ppre}yylook${ppost}/${prefix}look/g" \
	-e "s/${ppre}yylsp${ppost}/${prefix}lsp/g" \
	-e "s/${ppre}yylstate${ppost}/${prefix}lstate/g" \
	-e "s/${ppre}yylval${ppost}/${prefix}lval/g" \
	-e "s/${ppre}yymatch${ppost}/${prefix}match/g" \
	-e "s/${ppre}yymorfg${ppost}/${prefix}morfg/g" \
	-e "s/${ppre}yyolsp${ppost}/${prefix}olsp/g" \
	-e "s/${ppre}yyout${ppost}/${prefix}out/g" \
	-e "s/${ppre}yyoutput${ppost}/${prefix}output/g" \
	-e "s/${ppre}yyprevious${ppost}/${prefix}previous/g" \
	-e "s/${ppre}yysbuf${ppost}/${prefix}sbuf/g" \
	-e "s/${ppre}yysptr${ppost}/${prefix}sptr/g" \
	-e "s/${ppre}yysvec${ppost}/${prefix}svec/g" \
	-e "s/${ppre}yytchar${ppost}/${prefix}tchar/g" \
	-e "s/${ppre}yytext${ppost}/${prefix}text/g" \
	-e "s/${ppre}yytop${ppost}/${prefix}top/g" \
	-e "s/${ppre}yyunput${ppost}/${prefix}unput/g" \
	-e "s/${ppre}yyvstop${ppost}/${prefix}vstop/g" \
	-e "s/${ppre}yywrap${ppost}/${prefix}wrap/g" \
	-e "s/${ppre}yy_create_buffer${ppost}/${prefix}_create_buffer/g" \
	-e "s/${ppre}yy_delete_buffer${ppost}/${prefix}_delete_buffer/g" \
	-e "s/${ppre}yy_flex_debug${ppost}/${prefix}_flex_debug/g" \
	-e "s/${ppre}yy_init_buffer${ppost}/${prefix}_init_buffer/g" \
	-e "s/${ppre}yy_flush_buffer${ppost}/${prefix}_flush_buffer/g" \
	-e "s/${ppre}yy_load_buffer${ppost}/${prefix}_load_buffer/g" \
	-e "s/${ppre}yy_switch_to_buffer${ppost}/${prefix}_switch_to_buffer/g" \
	-e "s/${ppre}yyrestart${ppost}/${prefix}restart/g"
}

sedyacc () {
# yacc external references
#  need to make sure it's an isolated C name
#	ppre="\([^a-zA-Z_]\)"
#	ppost="\([^a-zA-Z_]\)"
	ppre="\b"
	ppost="\b"
sed \
	-e "s/${ppre}yyact${ppost}/${prefix}act/g" \
	-e "s/${ppre}yychar${ppost}/${prefix}char/g" \
	-e "s/${ppre}yychk${ppost}/${prefix}chk/g" \
	-e "s/${ppre}yydebug${ppost}/${prefix}debug/g" \
	-e "s/${ppre}yydef${ppost}/${prefix}def/g" \
	-e "s/${ppre}yyerrflag${ppost}/${prefix}errflag/g" \
	-e "s/${ppre}yyerror${ppost}/${prefix}error/g" \
	-e "s/${ppre}yyexca${ppost}/${prefix}exca/g" \
	-e "s/${ppre}yylex${ppost}/${prefix}lex/g" \
	-e "s/${ppre}yylval${ppost}/${prefix}lval/g" \
	-e "s/${ppre}yynerrs${ppost}/${prefix}nerrs/g" \
	-e "s/${ppre}yypact${ppost}/${prefix}pact/g" \
	-e "s/${ppre}yyparse${ppost}/${prefix}parse/g" \
	-e "s/${ppre}yypgo${ppost}/${prefix}pgo/g" \
	-e "s/${ppre}yyps${ppost}/${prefix}ps/g" \
	-e "s/${ppre}yypv${ppost}/${prefix}pv/g" \
	-e "s/${ppre}yyr1${ppost}/${prefix}r1/g" \
	-e "s/${ppre}yyr2${ppost}/${prefix}r2/g" \
	-e "s/${ppre}yyreds${ppost}/${prefix}reds/g" \
	-e "s/${ppre}yys${ppost}/${prefix}s/g" \
	-e "s/${ppre}yystate${ppost}/${prefix}state/g" \
	-e "s/${ppre}yytmp${ppost}/${prefix}tmp/g" \
	-e "s/${ppre}yytoks${ppost}/${prefix}toks/g" \
	-e "s/${ppre}yyv${ppost}/${prefix}v/g" \
	-e "s/${ppre}yyval${ppost}/${prefix}val/g"
}

if [ $# -lt 2 ]; then
	usage
	exit 1
fi

prefix=
lsed=1
ysed=1

while [ x"$1" != x"" ]
do
	case $1 in
	-h*|--h*)	usage
			exit
			;;
	-b*|--b*)	lsed=1; ysed=1
			;;
	-l*|--l*)	lsed=1; ysed=0
			;;
	-y*|--y*)	lsed=0; ysed=1
			;;
	-p|--prefix)	shift; prefix=$1
			;;
	*)		usage
			exit 2
			;;
	esac

	shift
done

if [ x"$prefix" = x"" ]; then
	usage
	echo "needs a prefix"
	exit 3
fi

#echo lsed=$lsed ysed=$ysed prefix=$prefix

if [ $lsed -eq 1 -a $ysed -eq 1 ]; then
	sedlex | sedyacc
elif [ $lsed -eq 1 -a $ysed -eq 0 ]; then
	sedlex
elif [ $lsed -eq 0 -a $ysed -eq 1 ]; then
	sedyacc
fi

exit
