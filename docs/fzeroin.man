.\" RCSID @(#)$Id: fzeroin.man,v 1.2 1999/03/25 15:08:31 rk Exp $
.\" LIBDIR
.TH "FZEROIN" "3rko" "12 May 1995"
.SH NAME
fzeroin \- finds the zero of (f(x) - y0) within the interval [ax,bx]
.SH SYNOPSIS

 #include "librko.h"
 PRECISION fzeroin(PRECISION ax, PRECISION bx,
                   PRECISION y0, PRECISION (*f)(PRECISION), PRECISION tol);

.SH DESCRIPTION
.I fzeroin()
returns the zero of (f(x) - y0) within the interval [ax,bx].
.TP 15
ax
= left  endpoint of the initial interval
.TP
bx
= right endpoint of the initial interval
.TP
y0
= the abcissa value to match
.TP
f
= function subprogram which evaluates f(x) for any x in
the interval [ax,bx]
.TP
tol
= desired length of the interval of uncertainty of any
final result ( must be >= 0.)
.TP
return value
= fzeroin ordinate approximating a zero of (f(x) - y0)
in the interval [ax,bx]

It is assumed that f(ax) - y0 and f(bx) - y0 have opposite signs without
checking.
fzeroin returns a zero x in the given interval [ax,bx] to within a
tolerance 2*eps*abs(x) + tol, where eps is the relative machine precision
such that eps is the smallest number + 1 that is different from 1.

.SH SEE ALSO
foptim(3rko)

.SH NOTES
The type PRECISION is normally set to double in librko.h

This is based on the Fortran subroutine ZEROIN() in FMMLIB presented in
"Introduction to Numerical Analysis" by Forsythe, Malcolm, and Moler,
which is a slightly modified translation of the ALGOL 60 procedure ZERO
given by Richard Brent, "Algorithms for Minimization without Derivatives",
Prentice-Hall, Inc. (1973).

.SH AUTHOR
R.K.Owen,Ph.D.

.KEY WORDS
