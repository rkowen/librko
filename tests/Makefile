# Makefile.in generated by automake 1.6.2 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



###########################################################################
###########################################################################
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /u/owen/rk
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/librko
pkglibdir = $(libdir)/librko
pkgincludedir = $(includedir)/librko
top_builddir = ..

ACLOCAL = ${SHELL} /u/owen/rk/src/librko/config/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /u/owen/rk/src/librko/config/missing --run autoconf
AUTOMAKE = ${SHELL} /u/owen/rk/src/librko/config/missing --run automake-1.6
AUTOHEADER = ${SHELL} /u/owen/rk/src/librko/config/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /u/owen/rk/src/librko/config/missing --run tar
AWK = gawk
CC = gcc
DEPDIR = .deps
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
PACKAGE = librko
RANLIB = ranlib
STRIP = 
VERSION = 1.0
am__include = include
am__quote = 
install_sh = /u/owen/rk/src/librko/config/install-sh

AUTOMAKE_OPTIONS = foreign no-installinfo no-installman

AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir) -I$(srcdir)

helper_progs = doggy kitty birdy

test_progs = \
	tansi_seq.x tavec.x tclocker.x tdirtree.x tfilter.x	\
	tfoptim.x tfzeroin.x tigcd.x tinvoke.x tiprime.x	\
	tisqrt.x tlist.x tmacrosub.x tmemdbg.x tnameread.x	\
	tspawn.x tstrchop.x tstrdbecpy.x tstrmalloc.x tstrmem.x	\
	ttfgets.x tuvec.x twcstrcmp.x


noinst_PROGRAMS = $(helper_progs)			\
			$(test_progs)


LDADD = ../librko.a

# helper programs
doggy_SOURCES = doggy.c
kitty_SOURCES = kitty.c
birdy_SOURCES = birdy.c

# test programs
tansi_seq_x_SOURCES = tansi_seq.c
tavec_x_SOURCES = tavec.c
tclocker_x_SOURCES = tclocker.c
tdirtree_x_SOURCES = tdirtree.c
tfilter_x_SOURCES = tfilter.c
tfoptim_x_SOURCES = tfoptim.c
tfzeroin_x_SOURCES = tfzeroin.c
tigcd_x_SOURCES = tigcd.c
tinvoke_x_SOURCES = tinvoke.c
tiprime_x_SOURCES = tiprime.c
tisqrt_x_SOURCES = tisqrt.c
tlist_x_SOURCES = tlist.c
tmacrosub_x_SOURCES = tmacrosub.c
tmemdbg_x_SOURCES = tmemdbg.c
tnameread_x_SOURCES = tnameread.c
tspawn_x_SOURCES = tspawn.c
tstrchop_x_SOURCES = tstrchop.c
tstrdbecpy_x_SOURCES = tstrdbecpy.c
tstrmalloc_x_SOURCES = tstrmalloc.c
tstrmem_x_SOURCES = tstrmem.c
ttfgets_x_SOURCES = ttfgets.c
tuvec_x_SOURCES = tuvec.c
twcstrcmp_x_SOURCES = twcstrcmp.c

EXES = $(test_progs)
subdir = tests
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = doggy$(EXEEXT) kitty$(EXEEXT) birdy$(EXEEXT) \
	tansi_seq.x$(EXEEXT) tavec.x$(EXEEXT) tclocker.x$(EXEEXT) \
	tdirtree.x$(EXEEXT) tfilter.x$(EXEEXT) tfoptim.x$(EXEEXT) \
	tfzeroin.x$(EXEEXT) tigcd.x$(EXEEXT) tinvoke.x$(EXEEXT) \
	tiprime.x$(EXEEXT) tisqrt.x$(EXEEXT) tlist.x$(EXEEXT) \
	tmacrosub.x$(EXEEXT) tmemdbg.x$(EXEEXT) tnameread.x$(EXEEXT) \
	tspawn.x$(EXEEXT) tstrchop.x$(EXEEXT) tstrdbecpy.x$(EXEEXT) \
	tstrmalloc.x$(EXEEXT) tstrmem.x$(EXEEXT) ttfgets.x$(EXEEXT) \
	tuvec.x$(EXEEXT) twcstrcmp.x$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_birdy_OBJECTS = birdy.$(OBJEXT)
birdy_OBJECTS = $(am_birdy_OBJECTS)
birdy_LDADD = $(LDADD)
birdy_DEPENDENCIES = ../librko.a
birdy_LDFLAGS =
am_doggy_OBJECTS = doggy.$(OBJEXT)
doggy_OBJECTS = $(am_doggy_OBJECTS)
doggy_LDADD = $(LDADD)
doggy_DEPENDENCIES = ../librko.a
doggy_LDFLAGS =
am_kitty_OBJECTS = kitty.$(OBJEXT)
kitty_OBJECTS = $(am_kitty_OBJECTS)
kitty_LDADD = $(LDADD)
kitty_DEPENDENCIES = ../librko.a
kitty_LDFLAGS =
am_tansi_seq_x_OBJECTS = tansi_seq.$(OBJEXT)
tansi_seq_x_OBJECTS = $(am_tansi_seq_x_OBJECTS)
tansi_seq_x_LDADD = $(LDADD)
tansi_seq_x_DEPENDENCIES = ../librko.a
tansi_seq_x_LDFLAGS =
am_tavec_x_OBJECTS = tavec.$(OBJEXT)
tavec_x_OBJECTS = $(am_tavec_x_OBJECTS)
tavec_x_LDADD = $(LDADD)
tavec_x_DEPENDENCIES = ../librko.a
tavec_x_LDFLAGS =
am_tclocker_x_OBJECTS = tclocker.$(OBJEXT)
tclocker_x_OBJECTS = $(am_tclocker_x_OBJECTS)
tclocker_x_LDADD = $(LDADD)
tclocker_x_DEPENDENCIES = ../librko.a
tclocker_x_LDFLAGS =
am_tdirtree_x_OBJECTS = tdirtree.$(OBJEXT)
tdirtree_x_OBJECTS = $(am_tdirtree_x_OBJECTS)
tdirtree_x_LDADD = $(LDADD)
tdirtree_x_DEPENDENCIES = ../librko.a
tdirtree_x_LDFLAGS =
am_tfilter_x_OBJECTS = tfilter.$(OBJEXT)
tfilter_x_OBJECTS = $(am_tfilter_x_OBJECTS)
tfilter_x_LDADD = $(LDADD)
tfilter_x_DEPENDENCIES = ../librko.a
tfilter_x_LDFLAGS =
am_tfoptim_x_OBJECTS = tfoptim.$(OBJEXT)
tfoptim_x_OBJECTS = $(am_tfoptim_x_OBJECTS)
tfoptim_x_LDADD = $(LDADD)
tfoptim_x_DEPENDENCIES = ../librko.a
tfoptim_x_LDFLAGS =
am_tfzeroin_x_OBJECTS = tfzeroin.$(OBJEXT)
tfzeroin_x_OBJECTS = $(am_tfzeroin_x_OBJECTS)
tfzeroin_x_LDADD = $(LDADD)
tfzeroin_x_DEPENDENCIES = ../librko.a
tfzeroin_x_LDFLAGS =
am_tigcd_x_OBJECTS = tigcd.$(OBJEXT)
tigcd_x_OBJECTS = $(am_tigcd_x_OBJECTS)
tigcd_x_LDADD = $(LDADD)
tigcd_x_DEPENDENCIES = ../librko.a
tigcd_x_LDFLAGS =
am_tinvoke_x_OBJECTS = tinvoke.$(OBJEXT)
tinvoke_x_OBJECTS = $(am_tinvoke_x_OBJECTS)
tinvoke_x_LDADD = $(LDADD)
tinvoke_x_DEPENDENCIES = ../librko.a
tinvoke_x_LDFLAGS =
am_tiprime_x_OBJECTS = tiprime.$(OBJEXT)
tiprime_x_OBJECTS = $(am_tiprime_x_OBJECTS)
tiprime_x_LDADD = $(LDADD)
tiprime_x_DEPENDENCIES = ../librko.a
tiprime_x_LDFLAGS =
am_tisqrt_x_OBJECTS = tisqrt.$(OBJEXT)
tisqrt_x_OBJECTS = $(am_tisqrt_x_OBJECTS)
tisqrt_x_LDADD = $(LDADD)
tisqrt_x_DEPENDENCIES = ../librko.a
tisqrt_x_LDFLAGS =
am_tlist_x_OBJECTS = tlist.$(OBJEXT)
tlist_x_OBJECTS = $(am_tlist_x_OBJECTS)
tlist_x_LDADD = $(LDADD)
tlist_x_DEPENDENCIES = ../librko.a
tlist_x_LDFLAGS =
am_tmacrosub_x_OBJECTS = tmacrosub.$(OBJEXT)
tmacrosub_x_OBJECTS = $(am_tmacrosub_x_OBJECTS)
tmacrosub_x_LDADD = $(LDADD)
tmacrosub_x_DEPENDENCIES = ../librko.a
tmacrosub_x_LDFLAGS =
am_tmemdbg_x_OBJECTS = tmemdbg.$(OBJEXT)
tmemdbg_x_OBJECTS = $(am_tmemdbg_x_OBJECTS)
tmemdbg_x_LDADD = $(LDADD)
tmemdbg_x_DEPENDENCIES = ../librko.a
tmemdbg_x_LDFLAGS =
am_tnameread_x_OBJECTS = tnameread.$(OBJEXT)
tnameread_x_OBJECTS = $(am_tnameread_x_OBJECTS)
tnameread_x_LDADD = $(LDADD)
tnameread_x_DEPENDENCIES = ../librko.a
tnameread_x_LDFLAGS =
am_tspawn_x_OBJECTS = tspawn.$(OBJEXT)
tspawn_x_OBJECTS = $(am_tspawn_x_OBJECTS)
tspawn_x_LDADD = $(LDADD)
tspawn_x_DEPENDENCIES = ../librko.a
tspawn_x_LDFLAGS =
am_tstrchop_x_OBJECTS = tstrchop.$(OBJEXT)
tstrchop_x_OBJECTS = $(am_tstrchop_x_OBJECTS)
tstrchop_x_LDADD = $(LDADD)
tstrchop_x_DEPENDENCIES = ../librko.a
tstrchop_x_LDFLAGS =
am_tstrdbecpy_x_OBJECTS = tstrdbecpy.$(OBJEXT)
tstrdbecpy_x_OBJECTS = $(am_tstrdbecpy_x_OBJECTS)
tstrdbecpy_x_LDADD = $(LDADD)
tstrdbecpy_x_DEPENDENCIES = ../librko.a
tstrdbecpy_x_LDFLAGS =
am_tstrmalloc_x_OBJECTS = tstrmalloc.$(OBJEXT)
tstrmalloc_x_OBJECTS = $(am_tstrmalloc_x_OBJECTS)
tstrmalloc_x_LDADD = $(LDADD)
tstrmalloc_x_DEPENDENCIES = ../librko.a
tstrmalloc_x_LDFLAGS =
am_tstrmem_x_OBJECTS = tstrmem.$(OBJEXT)
tstrmem_x_OBJECTS = $(am_tstrmem_x_OBJECTS)
tstrmem_x_LDADD = $(LDADD)
tstrmem_x_DEPENDENCIES = ../librko.a
tstrmem_x_LDFLAGS =
am_ttfgets_x_OBJECTS = ttfgets.$(OBJEXT)
ttfgets_x_OBJECTS = $(am_ttfgets_x_OBJECTS)
ttfgets_x_LDADD = $(LDADD)
ttfgets_x_DEPENDENCIES = ../librko.a
ttfgets_x_LDFLAGS =
am_tuvec_x_OBJECTS = tuvec.$(OBJEXT)
tuvec_x_OBJECTS = $(am_tuvec_x_OBJECTS)
tuvec_x_LDADD = $(LDADD)
tuvec_x_DEPENDENCIES = ../librko.a
tuvec_x_LDFLAGS =
am_twcstrcmp_x_OBJECTS = twcstrcmp.$(OBJEXT)
twcstrcmp_x_OBJECTS = $(am_twcstrcmp_x_OBJECTS)
twcstrcmp_x_LDADD = $(LDADD)
twcstrcmp_x_DEPENDENCIES = ../librko.a
twcstrcmp_x_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = -lm 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/birdy.Po ./$(DEPDIR)/doggy.Po \
	./$(DEPDIR)/kitty.Po ./$(DEPDIR)/tansi_seq.Po \
	./$(DEPDIR)/tavec.Po ./$(DEPDIR)/tclocker.Po \
	./$(DEPDIR)/tdirtree.Po ./$(DEPDIR)/tfilter.Po \
	./$(DEPDIR)/tfoptim.Po ./$(DEPDIR)/tfzeroin.Po \
	./$(DEPDIR)/tigcd.Po ./$(DEPDIR)/tinvoke.Po \
	./$(DEPDIR)/tiprime.Po ./$(DEPDIR)/tisqrt.Po \
	./$(DEPDIR)/tlist.Po ./$(DEPDIR)/tmacrosub.Po \
	./$(DEPDIR)/tmemdbg.Po ./$(DEPDIR)/tnameread.Po \
	./$(DEPDIR)/tspawn.Po ./$(DEPDIR)/tstrchop.Po \
	./$(DEPDIR)/tstrdbecpy.Po ./$(DEPDIR)/tstrmalloc.Po \
	./$(DEPDIR)/tstrmem.Po ./$(DEPDIR)/ttfgets.Po \
	./$(DEPDIR)/tuvec.Po ./$(DEPDIR)/twcstrcmp.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2
DIST_SOURCES = $(birdy_SOURCES) $(doggy_SOURCES) $(kitty_SOURCES) \
	$(tansi_seq_x_SOURCES) $(tavec_x_SOURCES) $(tclocker_x_SOURCES) \
	$(tdirtree_x_SOURCES) $(tfilter_x_SOURCES) $(tfoptim_x_SOURCES) \
	$(tfzeroin_x_SOURCES) $(tigcd_x_SOURCES) $(tinvoke_x_SOURCES) \
	$(tiprime_x_SOURCES) $(tisqrt_x_SOURCES) $(tlist_x_SOURCES) \
	$(tmacrosub_x_SOURCES) $(tmemdbg_x_SOURCES) \
	$(tnameread_x_SOURCES) $(tspawn_x_SOURCES) \
	$(tstrchop_x_SOURCES) $(tstrdbecpy_x_SOURCES) \
	$(tstrmalloc_x_SOURCES) $(tstrmem_x_SOURCES) \
	$(ttfgets_x_SOURCES) $(tuvec_x_SOURCES) $(twcstrcmp_x_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(birdy_SOURCES) $(doggy_SOURCES) $(kitty_SOURCES) $(tansi_seq_x_SOURCES) $(tavec_x_SOURCES) $(tclocker_x_SOURCES) $(tdirtree_x_SOURCES) $(tfilter_x_SOURCES) $(tfoptim_x_SOURCES) $(tfzeroin_x_SOURCES) $(tigcd_x_SOURCES) $(tinvoke_x_SOURCES) $(tiprime_x_SOURCES) $(tisqrt_x_SOURCES) $(tlist_x_SOURCES) $(tmacrosub_x_SOURCES) $(tmemdbg_x_SOURCES) $(tnameread_x_SOURCES) $(tspawn_x_SOURCES) $(tstrchop_x_SOURCES) $(tstrdbecpy_x_SOURCES) $(tstrmalloc_x_SOURCES) $(tstrmem_x_SOURCES) $(ttfgets_x_SOURCES) $(tuvec_x_SOURCES) $(twcstrcmp_x_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
birdy$(EXEEXT): $(birdy_OBJECTS) $(birdy_DEPENDENCIES) 
	@rm -f birdy$(EXEEXT)
	$(LINK) $(birdy_LDFLAGS) $(birdy_OBJECTS) $(birdy_LDADD) $(LIBS)
doggy$(EXEEXT): $(doggy_OBJECTS) $(doggy_DEPENDENCIES) 
	@rm -f doggy$(EXEEXT)
	$(LINK) $(doggy_LDFLAGS) $(doggy_OBJECTS) $(doggy_LDADD) $(LIBS)
kitty$(EXEEXT): $(kitty_OBJECTS) $(kitty_DEPENDENCIES) 
	@rm -f kitty$(EXEEXT)
	$(LINK) $(kitty_LDFLAGS) $(kitty_OBJECTS) $(kitty_LDADD) $(LIBS)
tansi_seq.x$(EXEEXT): $(tansi_seq_x_OBJECTS) $(tansi_seq_x_DEPENDENCIES) 
	@rm -f tansi_seq.x$(EXEEXT)
	$(LINK) $(tansi_seq_x_LDFLAGS) $(tansi_seq_x_OBJECTS) $(tansi_seq_x_LDADD) $(LIBS)
tavec.x$(EXEEXT): $(tavec_x_OBJECTS) $(tavec_x_DEPENDENCIES) 
	@rm -f tavec.x$(EXEEXT)
	$(LINK) $(tavec_x_LDFLAGS) $(tavec_x_OBJECTS) $(tavec_x_LDADD) $(LIBS)
tclocker.x$(EXEEXT): $(tclocker_x_OBJECTS) $(tclocker_x_DEPENDENCIES) 
	@rm -f tclocker.x$(EXEEXT)
	$(LINK) $(tclocker_x_LDFLAGS) $(tclocker_x_OBJECTS) $(tclocker_x_LDADD) $(LIBS)
tdirtree.x$(EXEEXT): $(tdirtree_x_OBJECTS) $(tdirtree_x_DEPENDENCIES) 
	@rm -f tdirtree.x$(EXEEXT)
	$(LINK) $(tdirtree_x_LDFLAGS) $(tdirtree_x_OBJECTS) $(tdirtree_x_LDADD) $(LIBS)
tfilter.x$(EXEEXT): $(tfilter_x_OBJECTS) $(tfilter_x_DEPENDENCIES) 
	@rm -f tfilter.x$(EXEEXT)
	$(LINK) $(tfilter_x_LDFLAGS) $(tfilter_x_OBJECTS) $(tfilter_x_LDADD) $(LIBS)
tfoptim.x$(EXEEXT): $(tfoptim_x_OBJECTS) $(tfoptim_x_DEPENDENCIES) 
	@rm -f tfoptim.x$(EXEEXT)
	$(LINK) $(tfoptim_x_LDFLAGS) $(tfoptim_x_OBJECTS) $(tfoptim_x_LDADD) $(LIBS)
tfzeroin.x$(EXEEXT): $(tfzeroin_x_OBJECTS) $(tfzeroin_x_DEPENDENCIES) 
	@rm -f tfzeroin.x$(EXEEXT)
	$(LINK) $(tfzeroin_x_LDFLAGS) $(tfzeroin_x_OBJECTS) $(tfzeroin_x_LDADD) $(LIBS)
tigcd.x$(EXEEXT): $(tigcd_x_OBJECTS) $(tigcd_x_DEPENDENCIES) 
	@rm -f tigcd.x$(EXEEXT)
	$(LINK) $(tigcd_x_LDFLAGS) $(tigcd_x_OBJECTS) $(tigcd_x_LDADD) $(LIBS)
tinvoke.x$(EXEEXT): $(tinvoke_x_OBJECTS) $(tinvoke_x_DEPENDENCIES) 
	@rm -f tinvoke.x$(EXEEXT)
	$(LINK) $(tinvoke_x_LDFLAGS) $(tinvoke_x_OBJECTS) $(tinvoke_x_LDADD) $(LIBS)
tiprime.x$(EXEEXT): $(tiprime_x_OBJECTS) $(tiprime_x_DEPENDENCIES) 
	@rm -f tiprime.x$(EXEEXT)
	$(LINK) $(tiprime_x_LDFLAGS) $(tiprime_x_OBJECTS) $(tiprime_x_LDADD) $(LIBS)
tisqrt.x$(EXEEXT): $(tisqrt_x_OBJECTS) $(tisqrt_x_DEPENDENCIES) 
	@rm -f tisqrt.x$(EXEEXT)
	$(LINK) $(tisqrt_x_LDFLAGS) $(tisqrt_x_OBJECTS) $(tisqrt_x_LDADD) $(LIBS)
tlist.x$(EXEEXT): $(tlist_x_OBJECTS) $(tlist_x_DEPENDENCIES) 
	@rm -f tlist.x$(EXEEXT)
	$(LINK) $(tlist_x_LDFLAGS) $(tlist_x_OBJECTS) $(tlist_x_LDADD) $(LIBS)
tmacrosub.x$(EXEEXT): $(tmacrosub_x_OBJECTS) $(tmacrosub_x_DEPENDENCIES) 
	@rm -f tmacrosub.x$(EXEEXT)
	$(LINK) $(tmacrosub_x_LDFLAGS) $(tmacrosub_x_OBJECTS) $(tmacrosub_x_LDADD) $(LIBS)
tmemdbg.x$(EXEEXT): $(tmemdbg_x_OBJECTS) $(tmemdbg_x_DEPENDENCIES) 
	@rm -f tmemdbg.x$(EXEEXT)
	$(LINK) $(tmemdbg_x_LDFLAGS) $(tmemdbg_x_OBJECTS) $(tmemdbg_x_LDADD) $(LIBS)
tnameread.x$(EXEEXT): $(tnameread_x_OBJECTS) $(tnameread_x_DEPENDENCIES) 
	@rm -f tnameread.x$(EXEEXT)
	$(LINK) $(tnameread_x_LDFLAGS) $(tnameread_x_OBJECTS) $(tnameread_x_LDADD) $(LIBS)
tspawn.x$(EXEEXT): $(tspawn_x_OBJECTS) $(tspawn_x_DEPENDENCIES) 
	@rm -f tspawn.x$(EXEEXT)
	$(LINK) $(tspawn_x_LDFLAGS) $(tspawn_x_OBJECTS) $(tspawn_x_LDADD) $(LIBS)
tstrchop.x$(EXEEXT): $(tstrchop_x_OBJECTS) $(tstrchop_x_DEPENDENCIES) 
	@rm -f tstrchop.x$(EXEEXT)
	$(LINK) $(tstrchop_x_LDFLAGS) $(tstrchop_x_OBJECTS) $(tstrchop_x_LDADD) $(LIBS)
tstrdbecpy.x$(EXEEXT): $(tstrdbecpy_x_OBJECTS) $(tstrdbecpy_x_DEPENDENCIES) 
	@rm -f tstrdbecpy.x$(EXEEXT)
	$(LINK) $(tstrdbecpy_x_LDFLAGS) $(tstrdbecpy_x_OBJECTS) $(tstrdbecpy_x_LDADD) $(LIBS)
tstrmalloc.x$(EXEEXT): $(tstrmalloc_x_OBJECTS) $(tstrmalloc_x_DEPENDENCIES) 
	@rm -f tstrmalloc.x$(EXEEXT)
	$(LINK) $(tstrmalloc_x_LDFLAGS) $(tstrmalloc_x_OBJECTS) $(tstrmalloc_x_LDADD) $(LIBS)
tstrmem.x$(EXEEXT): $(tstrmem_x_OBJECTS) $(tstrmem_x_DEPENDENCIES) 
	@rm -f tstrmem.x$(EXEEXT)
	$(LINK) $(tstrmem_x_LDFLAGS) $(tstrmem_x_OBJECTS) $(tstrmem_x_LDADD) $(LIBS)
ttfgets.x$(EXEEXT): $(ttfgets_x_OBJECTS) $(ttfgets_x_DEPENDENCIES) 
	@rm -f ttfgets.x$(EXEEXT)
	$(LINK) $(ttfgets_x_LDFLAGS) $(ttfgets_x_OBJECTS) $(ttfgets_x_LDADD) $(LIBS)
tuvec.x$(EXEEXT): $(tuvec_x_OBJECTS) $(tuvec_x_DEPENDENCIES) 
	@rm -f tuvec.x$(EXEEXT)
	$(LINK) $(tuvec_x_LDFLAGS) $(tuvec_x_OBJECTS) $(tuvec_x_LDADD) $(LIBS)
twcstrcmp.x$(EXEEXT): $(twcstrcmp_x_OBJECTS) $(twcstrcmp_x_DEPENDENCIES) 
	@rm -f twcstrcmp.x$(EXEEXT)
	$(LINK) $(twcstrcmp_x_LDFLAGS) $(twcstrcmp_x_OBJECTS) $(twcstrcmp_x_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/birdy.Po
include ./$(DEPDIR)/doggy.Po
include ./$(DEPDIR)/kitty.Po
include ./$(DEPDIR)/tansi_seq.Po
include ./$(DEPDIR)/tavec.Po
include ./$(DEPDIR)/tclocker.Po
include ./$(DEPDIR)/tdirtree.Po
include ./$(DEPDIR)/tfilter.Po
include ./$(DEPDIR)/tfoptim.Po
include ./$(DEPDIR)/tfzeroin.Po
include ./$(DEPDIR)/tigcd.Po
include ./$(DEPDIR)/tinvoke.Po
include ./$(DEPDIR)/tiprime.Po
include ./$(DEPDIR)/tisqrt.Po
include ./$(DEPDIR)/tlist.Po
include ./$(DEPDIR)/tmacrosub.Po
include ./$(DEPDIR)/tmemdbg.Po
include ./$(DEPDIR)/tnameread.Po
include ./$(DEPDIR)/tspawn.Po
include ./$(DEPDIR)/tstrchop.Po
include ./$(DEPDIR)/tstrdbecpy.Po
include ./$(DEPDIR)/tstrmalloc.Po
include ./$(DEPDIR)/tstrmem.Po
include ./$(DEPDIR)/ttfgets.Po
include ./$(DEPDIR)/tuvec.Po
include ./$(DEPDIR)/twcstrcmp.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=gcc3
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info:

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am:

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am


help : 
	@echo "Targets:"
	@echo "	all	- create all the test executables"
#	@echo "	mall	- create all the test memory debug executables"
	@echo "	runall	- run all the tests"
	@echo "	test	- both of above"
	@echo "	help	- this info"
	@echo "	clean	- remove .o files"
	@echo "	clobber	- do clean and remove all executables"

runall : $(EXES)
	-for f in $(EXES) ; do echo ===$$f===; ./$$f ; done 2>&1 | more

test : all runall

clean :
	-rm -f *.o *_m.o a.out core

clobber : clean
	-rm -f $(EXES)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
